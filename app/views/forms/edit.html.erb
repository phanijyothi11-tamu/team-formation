<div class="dashboard-container">
  <header class="dashboard-header">
    <div class="form-info">
      <h1 class="greeting">Editing Form: <%= @form.name %></h1>
      <p class="form-description"><%= truncate(@form.description, length: 100) %></p>
    </div>
    <%= link_to "Back to Forms", user_path(current_user), class: "btn btn-secondary logout-btn" %>
  </header>

  <main class="dashboard-content">
    <section class="form-details-section">
      <div class="section-header">
        <h2 class="forms-title">Edit Form Details</h2>
      </div>

      <% if flash[:alert] %>
        <div class="alert alert-danger"><%= flash[:alert] %></div>
      <% end %>

      <% if @form.errors.any? %>
        <div class="error-container">
          <div class="error-icon">
            <i class="fas fa-exclamation-circle"></i>
          </div>
          <div class="error-message">
            <h4>Oops! Please correct the following:</h4>
            <ul>
              <% @form.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      <% end %>

      <div class="form-content">
        <%= form_with(model: @form, local: true, data: { turbo: false }, class: "edit-form") do |form| %>
          <div class="form-group">
            <%= form.label :name %>
            <%= form.text_field :name, class: 'form-control' %>
          </div>

          <div class="form-group">
            <%= form.label :description %>
            <%= form.text_area :description, class: 'form-control' %>
          </div>

          <div>
            <div class="form-group-weightage-deadline">
              <%= form.label :deadline, "Set Deadline", id: "set_deadline" %>
            </div>
            <div class="form-group-weightage-deadline">
              <%= form.datetime_local_field :deadline, id: "deadline_picker", class: 'form-control' %>
              <button type="button" onclick="setDeadline()" class="btn btn-primary">Save Deadline</button>
            </div>
            <p id="display_deadline" class="deadline-display"></p>
          </div>

          <div class="form-actions">
            <div class="action-row">
              <%= form.submit "Save Form", class: "btn btn-primary", id: "form_submit_button" %>
              <%= button_tag 'Preview Form', type: 'button', class: 'btn btn-info', onclick: "openPreviewModal()" %>
              <%= link_to 'Duplicate Form', duplicate_form_path(@form), method: :post, class: 'btn btn-primary' %>
              <%= link_to 'Upload Students', upload_form_path(@form.id), class: 'btn btn-primary' %>
            </div>
          </div>
        <% end %>
      </div>

      <div class="form-attributes">
        <h2 class="section-title">Current Attributes</h2>
        <% if @form.form_attributes.any? %>
          <p class="total-weightage">Total Weightage: <%= @form.form_attributes.sum(:weightage).round(1) %></p>
          <ul class="attribute-list">
            <% @form.form_attributes.select(&:persisted?).each do |attribute| %>
              <li class="attribute-item">
                <h3 class="attribute-name"><%= attribute.name %> (<%= attribute.field_type %>)</h3>
                <% if attribute.field_type == 'scale' %>
                  <p class="scale-info">Min: <%= attribute.min_value %>, Max: <%= attribute.max_value %></p>
                <% elsif attribute.field_type == 'mcq' %>
                  <ul class="mcq-options">
                    <% (attribute.options&.split(',') || []).each_with_index do |option, index| %>
                      <li>Option <%= index + 1 %>: <%= option %></li>
                    <% end %>
                  </ul>
                <% end %>
                <div class="weightage-info">
                  Current Weightage: 
                  <% if ['gender', 'ethnicity'].include?(attribute.name.downcase) %>
                    N/A
                  <% else %>
                    <%= attribute.weightage.present? ? attribute.weightage : "Not set" %>
                  <% end %>
                </div>
                <% unless ['gender', 'ethnicity'].include?(attribute.name.downcase) %>
                  <%= form_with(model: attribute, url: update_weightage_form_attribute_path(@form, attribute), method: :patch, local: true, class: "weightage-form") do |f| %>                
                    <div class="form-group-weightage-deadline">
                      <%= f.label :weightage, "Update Weightage (0.0 to 1.0)" %>
                    </div>
                    <div class="form-group-weightage-deadline">
                      <%= f.number_field :weightage, step: 0.1, min: 0, max: 1, value: attribute.weightage, class: 'form-control' %>
                      <%= f.submit "Update Weightage", class: "btn btn-primary" %>
                    </div>
                  <% end %>
                <% end %>

                <%= button_to 'Destroy Attribute', form_attribute_path(@form, attribute), method: :delete, data: { confirm: 'Are you sure you want to remove this question?'}, class: 'btn btn-primary'%>

              </li>
            <% end %>
          </ul>
        <% else %>
          <p class="no-attributes">No attributes added yet.</p>
        <% end %>
      </div>

      <div class="add-attribute">
        <h2 class="section-title">Add Attribute</h2>
        <%= form_with(model: [@form, @form.form_attributes.build], local: true, class: "add-attribute-form") do |f| %>
          <div class="form-group">
            <%= f.label :name, "Attribute Name" %>
            <%= f.text_field :name, id: "attribute_name", class: 'form-control' %>
          </div>
          <div class="form-group">
            <%= f.label :field_type, "Attribute Type" %>
            <%= f.select :field_type, options_for_select([['Text', 'text_input'], ['MCQ', 'mcq'], ['Scale', 'scale']]), {}, { id: "attribute_type", onchange: 'toggleFields(this.value)', class: 'form-control' } %>
          </div>
          <div id="scale_fields" class="form-group" style="display: none;">
            <%= f.label :min_value, "Minimum Value" %>
            <%= f.number_field :min_value, id: "attribute_min_value", class: 'form-control' %>
            <%= f.label :max_value, "Maximum Value" %>
            <%= f.number_field :max_value, id: "attribute_max_value", class: 'form-control' %>
          </div>
          <div id="mcq_fields" class="form-group" style="display: none;">
            <%= f.label :options, "MCQ Options" %>
            <div id="mcq_options_container">
              <div class="mcq_option">
                <input type="text" name="mcq_options[]" placeholder="Option 1" class="form-control" />
              </div>
              <div class="mcq_option">
                <input type="text" name="mcq_options[]" placeholder="Option 2" class="form-control" />
              </div>
            </div>
            <button type="button" class="btn btn-secondary" id="add_option_button">Add Option</button>
          </div>
          <%= f.submit "Save Attribute", id: "save_attribute", class: "btn btn-primary" %>
        <% end %>
      </div>
    </section>
  </main>
</div>

<%= render 'preview' %>


<%# Add spacing between "Save Attribute" and action buttons %>
<div style="margin-top: 30px;"></div>

<% unless Rails.env.test? %>
  <script>
    function toggleFields(fieldType) {
      var scaleFields = document.getElementById('scale_fields');
      var mcqFields = document.getElementById('mcq_fields');

      scaleFields.style.display = fieldType === 'scale' ? 'block' : 'none';
      mcqFields.style.display = (fieldType === 'mcq') ? 'block' : 'none';
    }

    document.getElementById('add_option_button').addEventListener('click', function() {
      var container = document.getElementById('mcq_options_container');
      var optionCount = container.getElementsByClassName('mcq_option').length + 1;

      var newOptionDiv = document.createElement('div');
      newOptionDiv.classList.add('mcq_option');

      var newOptionInput = document.createElement('input');
      newOptionInput.type = 'text';
      newOptionInput.name = 'mcq_options[]'; 
      newOptionInput.placeholder = 'Option ' + optionCount;
      newOptionInput.classList.add('form-control');

      newOptionDiv.appendChild(newOptionInput);
      container.appendChild(newOptionDiv);
    });

    // Initialize the visibility
    toggleFields(document.getElementById('attribute_type').value);

    function openPreviewModal() {
      var modal = document.getElementById('previewModal');
      modal.style.display = "block";  // Show the modal
    }

function setDeadline() {
  var deadlinePicker = document.getElementById("deadline_picker");
  var selectedDeadline = deadlinePicker.value;
  var formId = <%= @form.id %>;

  if (selectedDeadline) {
    fetch(`/forms/${formId}/update_deadline`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({ deadline: selectedDeadline })
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        alert(data.error);
      } else {
        // Format the date string manually to avoid timezone conversions
        var date = new Date(selectedDeadline);
        var formattedDate = date.toLocaleString('en-US', {
          year: 'numeric', month: 'long', day: 'numeric',
          hour: '2-digit', minute: '2-digit', hour12: true
        }).replace(',', ' at');
        
        document.getElementById("display_deadline").innerText = "Deadline saved successfully"
        
        // Clear the message after 5 seconds
        setTimeout(() => {
          document.getElementById("display_deadline").innerText = "";
        }, 5000);
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert("An error occurred while updating the deadline.");
    });
  } else {
    document.getElementById("display_deadline").innerText = "Please select a deadline.";
    
    // Clear this message after 5 seconds as well
    setTimeout(() => {
      document.getElementById("display_deadline").innerText = "";
    }, 5000);
  }
}




document.getElementById('form_submit_button').addEventListener('click', function(event) {
  var deadlinePicker = document.getElementById('deadline_picker');
  var selectedDeadline = new Date(deadlinePicker.value);
  var now = new Date();

  if (selectedDeadline < now) {
    alert("The deadline cannot be in the past.");
    event.preventDefault(); // Prevent form submission
  } else {
    // Trigger form submission if the deadline is valid
    setDeadline();
  }
});



  </script>
<% end %>